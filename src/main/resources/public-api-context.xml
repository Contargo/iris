<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:util="http://www.springframework.org/schema/util"
             xsi:schemaLocation="
              http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
              http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
              http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
              http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <context:property-placeholder
            ignore-resource-not-found="true"
            location="classpath:application.properties, classpath:application-${environment:dev}.properties"/>

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven/>
    <beans:import resource="monitoring-context.xml"/>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <context:component-scan base-package="net.contargo.iris.address.api"/>
    <context:component-scan base-package="net.contargo.iris.address.staticsearch.api"/>
    <context:component-scan base-package="net.contargo.iris.api"/>
    <context:component-scan base-package="net.contargo.iris.countries.api"/>
    <context:component-scan base-package="net.contargo.iris.gis.api"/>
    <context:component-scan base-package="net.contargo.iris.connection.api"/>
    <context:component-scan base-package="net.contargo.iris.terminal.api"/>
    <context:component-scan base-package="net.contargo.iris.seaport.api"/>
    <context:component-scan base-package="net.contargo.iris.route.api"/>
    <context:component-scan base-package="net.contargo.iris.distancecloud.api"/>
    <context:component-scan base-package="net.contargo.iris.routedatarevision.api"/>
    <context:component-scan base-package="com.mangofactory"/>

    <beans:bean id="userAuthenticationService" class="net.contargo.iris.security.SpringUserAuthenticationService"/>

    <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <!--
        To support the resolution of a view based on a file extension, ContentNegotiatingViewResolver's bean property
        MediaTypes is used to specify a mapping of file extensions to media types. For more information on the algorithm
        to determine the request media type, refer to the API documentation for ContentNegotiatingViewResolver..
        -->
        <beans:property name="mediaTypes">
            <beans:map>
                <beans:entry key="json" value="application/json"/>
                <beans:entry key="html" value="text/html"/>
            </beans:map>
        </beans:property>

        <beans:property name="defaultContentType" value="application/json"/>
        <beans:property name="favorPathExtension" value="true"/>
        <beans:property name="ignoreAcceptHeader" value="false"/>

        <beans:property name="viewResolvers">
            <beans:list>
                <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
            </beans:list>
        </beans:property>

        <beans:property name="defaultViews">
            <beans:list>
                <beans:bean class="net.contargo.iris.api.discover.TestExplainView">
                    <beans:constructor-arg name="userAuthenticationService" ref="userAuthenticationService"/>
                    <beans:constructor-arg name="objectMapper" ref="duplicateDetectionObjectMapper"/>
                </beans:bean>
                <beans:bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
                    <beans:property name="objectMapper" ref="duplicateDetectionObjectMapper"/>
                </beans:bean>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="supportedMethods" value="GET,PUT,POST,HEAD,DELETE"/>
        <beans:property name="messageConverters">
            <beans:list>
                <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <beans:constructor-arg name="objectMapper" ref="duplicateDetectionObjectMapper"/>
                </beans:bean>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="duplicateDetectionObjectMapper"
          class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
        <beans:property name="featuresToEnable">
            <beans:array>
                <util:constant
                        static-field="com.fasterxml.jackson.core.JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION"/>
            </beans:array>
        </beans:property>
    </beans:bean>

    <!-- own ExceptionHandler for our Public API -->
    <beans:bean class="net.contargo.iris.api.PublicAPIExceptionHandler"/>

    <!-- set locale default to en -->
    <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
        <beans:property name="defaultLocale" value="en_EN"/>
    </beans:bean>

    <context:annotation-config/>
    <beans:bean class="net.contargo.iris.config.SwaggerConfig"/>
    <resources location="/api-docs/" mapping="/**"/>
    <resources location="/api-docs/css/" mapping="/css/**"/>
    <resources location="/api-docs/images/" mapping="/images/**"/>
    <resources location="/api-docs/lib/" mapping="/lib/**"/>
</beans:beans>